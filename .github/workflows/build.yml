#
# Copyright (C) 2024 AuxXxilium <https://github.com/AuxXxilium>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build Arc System

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        required: false
        type: string
      notice:
        description: "Notice here"
        required: false
        type: string
      latest:
        description: "latest"
        default: true
        type: boolean
      prerelease:
        description: "pre release"
        default: false
        type: boolean
      clean:
        description: "clean"
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Delete releases and workflows runs
        if: inputs.clean == true
        uses: ophub/delete-releases-workflows@main
        with:
          delete_releases: true
          releases_keep_latest: 1
          delete_workflows: true
          workflows_keep_day: 1
          delete_tags: true
          gh_token: ${{ secrets.GITHUB_TOKEN }}

      # Install Dependencies
      - name: Install Dependencies
        run: |
          git config --global user.email "info@auxxxilium.tech"
          git config --global user.name "AuxXxilium"
          sudo timedatectl set-timezone "Europe/Berlin"

      # calculates the version number and push
      - name: Calculate Version
        run: |
          # Calculate Version
          VERSION=""
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION="`date +'%y.%m.%d'`"
          fi
          
          echo "Version: ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

          if [ -n "${VERSION}" ]; then
            # Modify Source File
            echo "${VERSION}" >VERSION
          fi

      # Get Offline
      - name: Offline
        run: |
          curl -skL "https://autoupdate.synology.com/os/v2" -o "./system/include/offline.json"

      # Zip image
      - name: Pack
        run: |
          if [ -n "${{ env.VERSION }}" ]; then
            zip -9 "system-${{ env.VERSION }}.zip" "./system" -r
          fi

      # Publish a release if is a tag
      - name: Release
        if: success() && env.VERSION != ''
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          prerelease: ${{ inputs.prerelease }}
          makeLatest: ${{ inputs.latest }}
          allowUpdates: true
          body: |
            ### Information:
            Notice: ${{ inputs.notice }}
            
            - Full Changelog and Arc Patch (Decryption Key) are available in my Discord.
            - Release: ${{ env.BUILD_TIME }}
          artifacts: |
            system-*.zip
